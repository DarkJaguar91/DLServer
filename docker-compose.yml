version: '3.5' 

services:
  # Watchtower (docker container updater)
  # This container polls every 5 minutes for updates to docker containers.
  # I.E. Auto updates the tools for you, no need to manually update containers. 
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  traefik: 
    image: traefik
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports: 
      - 8680:8080 
      - 443:443
      - 80:80
    networks: 
      - darknet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  organizr:
    image: organizrtools/organizr-v2
    container_name: organizr
    restart: unless-stopped
    networks:
      - darknet
    volumes:
      - /server/organizr:/config
    environment: 
      - UID=1000
      - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.organizr.rule=PathPrefix(`/`)"

  netdata:
    image: netdata/netdata
    container_name: netdata
    restart: unless-stopped
    hostname: darkjaguar.mynetgear.com # set to fqdn of host
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - darknet
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netdata.rule=PathPrefix(`/netdata`)"
      - "traefik.http.middlewares.netdata-redirectregex.redirectregex.regex=^(.*?)/netdata$$"
      - "traefik.http.middlewares.netdata-redirectregex.redirectregex.replacement=$$1/netdata/"
      - "traefik.http.middlewares.netdata-stripprefix.stripprefix.prefixes=/netdata"
      - "traefik.http.routers.netdata.middlewares=netdata-redirectregex@docker,netdata-stripprefix@docker"

  emby: 
    image: emby/embyserver
    container_name: emby
    restart: unless-stopped
    networks:
      - darknet
    volumes: 
      - /etc/localtime:/etc/localtime:ro
      - /server/emby:/config
      - /DarkJaguar/Series:/media/Series
      - /DarkJaguar/Movies:/media/Movies
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
      - 1900:1900/udp
    environment: 
      - AUTO_UPDATES_ON=true
      - UID=1000
      - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.emby.rule=PathPrefix(`/emby`)"
      - "traefik.http.services.emby.loadbalancer.server.port=8096"
  
  plex:
    image: linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    volumes:
      - /server/plex:/config
      - /DarkJaguar/Series:/media/Series
      - /DarkJaguar/Movies:/media/Movies
      - /transcord:/transcode
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=PathPrefix(`/plex`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.middlewares.plex-redirectregex.redirectregex.regex=^(.*?)/plex$$"
      - "traefik.http.middlewares.plex-redirectregex.redirectregex.replacement=$$1/plex/"
      - "traefik.http.middlewares.plex-stripprefix.stripprefix.prefixes=/plex"
      - "traefik.http.routers.plex.middlewares=plex-redirectregex@docker,plex-stripprefix@docker"

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: unless-stopped
    networks:
      - darknet
    volumes:
      - /server/ombi:/config
    ports:
      - 3579:3579
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ombi.rule=PathPrefix(`/ombi`)"

  sonarr: 
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    networks:
      - darknet
    volumes: 
      - /server/sonarr:/config
      - /DarkJaguar/Series:/tv
      - /DarkJaguar/complete:/downloads
    environment:
      - UID=1000
      - GID=1000
    ports:
      - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=PathPrefix(`/sonarr`)"

  radarr: 
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    networks:
      - darknet
    volumes: 
      - /server/radarr:/config
      - /DarkJaguar/Movies:/movies
      - /DarkJaguar/complete:/downloads
    environment:
      - UID=1000
      - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=PathPrefix(`/radarr`)"

  sabnzbd: 
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    restart: unless-stopped
    networks:
      - darknet
    volumes: 
      - /server/sabnzbd:/config
      - /DarkJaguar/incomplete:/incomplete-downloads
      - /DarkJaguar/complete:/downloads
    environment:
      - UID=1000
      - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.rule=PathPrefix(`/sabnzbd`)"

  hydra:
    image: linuxserver/hydra2
    container_name: hydra
    restart: unless-stopped
    networks:
      - darknet
    volumes: 
      - /server/hydra:/config
      - /DarkJaguar/complete:/downloads
    environment:
      - UID=1000
      - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hydra.rule=PathPrefix(`/hydra`)"

networks:
  darknet:
    name: darknet
